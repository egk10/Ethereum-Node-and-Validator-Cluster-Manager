# Ethereum Validators Configuration Sample
# Copy this to config.yaml and customize for your setup
# 
# This file shows examples of all supported node types and configurations
# Personal information has been replaced with example values

nodes:
  # Standard ETH-Docker + Obol DVT Node
  - name: "validator-node-1"
    ssh_user: "root"
    eth_docker_path: "/home/user/eth-docker"
    beacon_api_port: 5052
    stack: ["eth-docker", "obol"]
    tailscale_domain: "validator-node-1.your-tailnet.ts.net"
    
  # ETH-Docker + Lido CSM Node
  - name: "lido-node-1"
    ssh_user: "root"
    eth_docker_path: "/home/user/eth-docker"
    beacon_api_port: 5052
    stack: ["eth-docker", "lido-csm"]
    tailscale_domain: "lido-node-1.your-tailnet.ts.net"
    
  # Multi-stack Node (ETH-Docker + Hyperdrive + Obol)
  - name: "hyperdrive-node"
    ssh_user: "root"
    eth_docker_path: "/home/user/eth-docker"
    beacon_api_port: 5052
    stack: ["eth-docker", "hyperdrive", "obol"]
    tailscale_domain: "hyperdrive-node.your-tailnet.ts.net"
    
  # RocketPool Node
  - name: "rocketpool-node"
    ssh_user: "root"
    eth_docker_path: "/home/user/eth-docker"
    beacon_api_port: 5052
    stack: ["eth-docker", "rocketpool"]
    tailscale_domain: "rocketpool-node.your-tailnet.ts.net"
    
  # Obol-only Node (Charon + Validator Client, no execution/consensus)
  - name: "obol-only-node"
    ssh_user: "root"
    eth_docker_path: "/home/user/eth-docker"
    beacon_api_port: 5052
    stack: ["obol"]
    ethereum_clients_enabled: false
    tailscale_domain: "obol-only-node.your-tailnet.ts.net"
    
  # Basic ETH-Docker Node
  - name: "basic-eth-node"
    ssh_user: "root"
    eth_docker_path: "/home/user/eth-docker"
    beacon_api_port: 5052
    stack: ["eth-docker"]
    tailscale_domain: "basic-eth-node.your-tailnet.ts.net"
    
  # Multi-network Node (Mainnet + Testnet)
  - name: "multi-network-node"
    ssh_user: "user"
    eth_docker_path: "/home/user/eth-docker"
    beacon_api_port: 5052
    networks:
      testnet:
        network_name: "holesky"
        container_prefix: "eth-holesky"
        beacon_api_port: 5053
        eth_docker_path: "/home/user/eth-holesky"
    stack: ["eth-docker"]
    is_local: true
    tailscale_domain: "multi-network-node.your-tailnet.ts.net"
    
  # Disabled/Maintenance Node
  - name: "backup-node"
    ssh_user: "root"
    eth_docker_path: "/home/user/eth-docker"
    beacon_api_port: null
    stack: ["disabled"]
    ethereum_clients_enabled: false
    tailscale_domain: "backup-node.your-tailnet.ts.net"

# Validator directory configuration
validators_csv: "validators_vs_hardware.csv"

# Default settings
default_ssh_timeout: 30
default_container_timeout: 300

# Auto-discovery settings (recommended for easier management)
auto_discovery:
  enabled: true
  validate_on_startup: false
  update_on_drift: false  # Set to true for automatic config updates

# ================================
# CONFIGURATION GUIDE
# ================================
#
# Supported Stacks:
# - "eth-docker": Standard ETH-Docker setup with execution + consensus clients
# - "obol": Obol Distributed Validator Technology (Charon)
# - "rocketpool": RocketPool liquid staking protocol
# - "hyperdrive": NodeSet Hyperdrive
# - "lido-csm": Lido Community Staking Module  
# - "ssv": SSV Network (experimental)
# - "stakewise": StakeWise V3 (experimental)
# - "disabled": Disabled/maintenance nodes
#
# Network Configuration:
# - Single network: Just specify the main config
# - Multi-network: Use the 'networks' section for additional networks
# - Testnet support: Use network_name "holesky", "sepolia", etc.
#
# Auto-Discovery Features:
# - Automatically detects running Docker containers
# - Identifies execution/consensus client pairs
# - Discovers active networks and ports
# - Validates configuration against live state
#
# Useful Commands:
# python3 -m eth_validators config validate          # Check configuration
# python3 -m eth_validators config validate --fix    # Auto-repair issues  
# python3 -m eth_validators config template list     # Show available templates
# python3 -m eth_validators node list                # Show cluster overview
# python3 -m eth_validators node versions --all      # Check client versions
#
# Setup Instructions:
# 1. Copy this file to config.yaml
# 2. Replace "your-tailnet" with your actual Tailscale network name
# 3. Update node names, domains, and paths for your setup
# 4. Run 'python3 -m eth_validators config validate' to verify
# 5. Use auto-discovery to minimize manual configuration
#
# For more information, see: https://github.com/egk10/Ethereum-Node-and-Validator-Cluster-Manager
